<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1893</width>
    <height>820</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <family>.SF NS Text</family>
    <pointsize>13</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="toolTipDuration">
   <number>-1</number>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QHBoxLayout" name="horizontalLayout_28">
    <item>
     <widget class="QSplitter" name="splitterThree">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <widget class="QSplitter" name="splitterTwo">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <widget class="QWidget" name="layoutWidget">
        <layout class="QVBoxLayout" name="verticalLayout_22">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_17">
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_4">
             <property name="spacing">
              <number>-1</number>
             </property>
             <item>
              <widget class="QPushButton" name="infoButton">
               <property name="minimumSize">
                <size>
                 <width>40</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>16777215</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking on this button will open a pdf file that provides version history. The most recent version change descriptions will be at the top for easy reference to the historical record.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Version Info</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLabel" name="label_2">
               <property name="text">
                <string>File:</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLineEdit" name="fileInUseEdit"/>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_6">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QPushButton" name="saveApertureState">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This function is only available for videos contained in an AVI/SER-WCS folder or a FITS folder.&lt;/p&gt;&lt;p&gt;Clicking this button will record all the apertures (and all their properties) for later restoration along with the current frame position.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; You will be prompted to supply a name string that will be appended to the file names that comprise this aperture group. This is to allow for multiple aperture groups to be associated with a video.&lt;/p&gt;&lt;p&gt;To restore a previous configuration, first open the folder, then click the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Restore aperture group&lt;/span&gt; button.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Save aperture group</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="restoreApertureState">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This function is only available for videos contained in an AVI/SER-WCS folder or a FITS folder.&lt;/p&gt;&lt;p&gt;Clicking this button will bring up a file selector dialog with candidates aperture groups highlighted for selection. Choosing one will restore a previously saved aperture group with all the property values present when the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Save aperture group&lt;/span&gt; button was clicked including the frame position.&lt;/p&gt;&lt;p&gt;Note that this action will first remove all current apertures, including the one that was automatically placed through an available WCS solution. Typically the target aperture would have been included in the saved aperture group anyway.&lt;/p&gt;&lt;p&gt;It will then position the file to the frame that was current when the 'save' was performed and recreate all apertures present at the time of 'saving' on that frame.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Restore aperture group</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="editAperturesButton">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button brings up a table that contains a row for each aperture that has been placed on the image. The columns list the available properties of an aperture. All property values, including (x,y), can be changed from this dialog box.&lt;/p&gt;&lt;p&gt;When a row has been selected, Thumbnail One will show the image enclosed by the aperture and Thumbnail Two will show the computed mask unless the default mask radius cell is active, in which case the default mask will be displayed instead.  This allows for edits of threshold and default mask radius with 'live' updates shown in Thumbnail Two.&lt;/p&gt;&lt;p&gt;Any changes made through this dialog take effect when either the enter key is pressed, the cell is exited (via a tab key or arrow key press for example), or the dialog is closed.&lt;/p&gt;&lt;p&gt;Columns for color, joggable, auto textOut, and thumbnail source have right-click context menus for making changes in those cells.&lt;/p&gt;&lt;p&gt;The columns for name, thresh, def mask radius, and csv output order are edited by highlighting the cell (single or double click) and then typing the new value. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;!!! When editing the value in a cell, the edit is NOT complete until you leave that cell or press enter. Make it a practice to 'tab out' of a cell that you have modified. (This procedure is not needed for a cell that has been modified by a right-click context menu) !!!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Constraints on property values:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- name: none&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- thresh: positive integer&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- def mask radius: minimum value of 2.00 (initial value is 5.3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- color: only one green allowed and no more than two yellows&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- thumbnail source: only a single aperture can be set as the thumbnail source&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- csv output order: positive integer (it's up to you to avoid duplicates!)&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Examine/change aperture settings</string>
               </property>
              </widget>
             </item>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_3">
               <item>
                <widget class="QComboBox" name="roiComboBox">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>80</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>80</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This drop-down selection box changes the measurement aperture size.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; it is a reqirement that all apertures be the same size during a lightcurve extraction, so changing the aperture size will automatically remove all existing apertures.&lt;/p&gt;&lt;p&gt;If there is substantial wind shake in the video, you should select an aperture size sufficent to contain the 'wanderings' of the star you have selected for tracking or, if there is no tracking star, then the target star itself.&lt;/p&gt;&lt;p&gt;If there is no significant wind shake, use of a smaller aperture (like 31) may be more useful in dealing with dense star fields.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="currentText">
                  <string/>
                 </property>
                 <property name="currentIndex">
                  <number>-1</number>
                 </property>
                 <property name="maxVisibleItems">
                  <number>3</number>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="selectApertureSizeLabel">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This drop-down selection box changes the measurement aperture size.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; it is a reqirement that all apertures be the same size during a lightcurve extraction, so changing the aperture size will automatically remove all existing apertures.&lt;/p&gt;&lt;p&gt;If there is substantial wind shake in the video, you should select an aperture size sufficent to contain the 'wanderings' of the star you have selected for tracking or, if there is no tracking star, then the target star itself.&lt;/p&gt;&lt;p&gt;If there is no significant wind shake, use of a smaller aperture (like 31) may be more useful in dealing with dense star fields.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note: &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#0000ff;&quot;&gt;An aperture is never allowed to extend outside the image boundary. As a result, if an aperture is placed on a star that is close to the image edge and that star subsequently moves closer to the edge, tracking will be lost when the aperture bumps up against edge. In this case, use of a smaller aperture will allow tracking closer to the edge.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Select aperture size</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout">
             <item>
              <spacer name="horizontalSpacer">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item>
              <widget class="QLabel" name="setMskthLabel">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If there is a currently 'green' aperture showing, its threshold value will be set to any new value from this spinner and &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Thumbnail Two&lt;/span&gt; in the lower right corner will update dynamically to show the effect of the change on the binary sample mask generation.&lt;/p&gt;&lt;p&gt;The mask threshold is always set as counts above average background. A good starting point for setting this value is to set it equal to the background noise (found in the column labelled &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;bkstd&lt;/span&gt; in the text box) rounded up. The program tries to do this automatically so, in most cases, this value will already be preset. This is sometimes referred to as &lt;span style=&quot; color:#0000ff;&quot;&gt;'setting the threshold to 1 sigma'&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;Note: &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;mskth&lt;/span&gt; (mask threshold) and &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;bkavg&lt;/span&gt; (background average) are column headings in the text box.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>set mask threshold (mskth) counts above background (bkavg)</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QSpinBox" name="threshValueEdit">
               <property name="toolTip">
                <string/>
               </property>
               <property name="maximum">
                <number>99999</number>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QHBoxLayout" name="horizontalLayout_26">
             <item>
              <layout class="QVBoxLayout" name="verticalLayout_5">
               <property name="spacing">
                <number>0</number>
               </property>
               <item>
                <widget class="QCheckBox" name="viewFieldsCheckBox">
                 <property name="enabled">
                  <bool>false</bool>
                 </property>
                 <property name="text">
                  <string>View avi fields</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="processAsFieldsCheckBox">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="text">
                  <string>Process avi in field mode</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="topFieldFirstRadioButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="text">
                  <string>top field is first in time</string>
                 </property>
                 <property name="checked">
                  <bool>false</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="bottomFieldFirstRadioButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="text">
                  <string>bottom field is first in time</string>
                 </property>
                 <property name="checked">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
              <spacer name="horizontalSpacer_30">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item>
              <layout class="QVBoxLayout" name="verticalLayout_15">
               <item>
                <widget class="QCheckBox" name="showImageControlCheckBox">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this box is checked, an image control widget will appear to the right of the main image.&lt;/p&gt;&lt;p&gt;This widget shows a useful/interesting histogram of the image pixel values and gives you the ability to change how pixel values are mapped to the black-to-white grayscale.&lt;/p&gt;&lt;p&gt;To change the pixel mappings, click and drag the horizontal bars (in the left portion of the widget) that enclose the histogram display and that connect visually to the black-white colorbar.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; changes made via this control do &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;not&lt;/span&gt; affect the data that is used for generating lightcurves. It only changes what you see in the main image display. But when you right click on the main image and select 'export', the display values are what gets exported; this is the &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;only&lt;/span&gt; time that 'display' values are used.&lt;/p&gt;&lt;p&gt;Until this image control is opened, the grayscale mapping of each image changes based on the minimum and maximum pixel values in that image. This automatic rescaling is usually acceptable but can cause apparent 'flashing' of the images during playback. Opening and then closing this image control will freeze the automatic rescaling.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; if you do not close the image control, when you return to the frame that was used to decide the desired settings, the settings are automatically reset --- this is not a useful behavior, so ... Best practice: activate the control; adjust the sliders; close the control.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Show image contrast control</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="demoMeanPushButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The 'robust' calculation of the background average and the 'robust' estimation of the dispersion (noise) in the background is an important factor in the calculation of signal intensities.&lt;/p&gt;&lt;p&gt;This button demonstrates with a detailed plot the calculation as it was performed for the current 'thumbnail'.&lt;/p&gt;&lt;p&gt;This is meant primarily for education purposes but may be useful in special cases to confirm (or not) that the 'robust' calculations are reasonable.&lt;/p&gt;&lt;p&gt;Note: the scale of dispersion (noise) is calulated using the MAD (Median Absolute Deviation) technique. Making the assumption that the background pixel counts (exclusive of outliers) are drawn from a Gaussian distribution, the bkstd is calculated as 1.4826 * MAD(aperture).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Plot Robust Mean</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
            </layout>
           </item>
          </layout>
         </item>
         <item>
          <widget class="QTabWidget" name="tabWidget">
           <property name="currentIndex">
            <number>0</number>
           </property>
           <property name="usesScrollButtons">
            <bool>true</bool>
           </property>
           <property name="movable">
            <bool>true</bool>
           </property>
           <widget class="QWidget" name="tab_5">
            <attribute name="title">
             <string>File/Folder</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_2">
             <item row="0" column="2">
              <spacer name="horizontalSpacer_3">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="0">
              <spacer name="horizontalSpacer_2">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_2">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="3">
              <widget class="QLabel" name="h1">
               <property name="enabled">
                <bool>false</bool>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;You are seeing this help panel because you clicked on a &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;'track path'&lt;/span&gt; menu item in a non-yellow aperture --- those menu items have an effect &lt;span style=&quot; font-weight:600;&quot;&gt;only&lt;/span&gt; in the context of a yellow aperture and are used to define a 'tracking path', a tracking option designed to assist in processing 'drift-through' videos.&lt;/p&gt;&lt;p&gt;A 'tracking path' is a straight line across an image that is to be followed frame-by-frame by the center of a yellow tracking aperture as the video is analyzed. This can be used to 'follow' an object that disappears completely, particularly useful in the situation where there are no other stars that remain visible enough to provide a separate tracking reference. And, as always, the presence of a yellow aperture locks all apertures into a 'constellation' that moves as a unit.&lt;/p&gt;&lt;p&gt;Note: to ease the task of re-positioning the yellow aperture as you advance to later frames, enable jogging on the aperture.&lt;/p&gt;&lt;p&gt;To define a 'tracking path', use a &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;single&lt;/span&gt; yellow aperture and position that aperture at a desired point early in the video (it does &lt;span style=&quot; font-weight:600;&quot;&gt;not&lt;/span&gt; have to be frame 0) and click on the menu item &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Use current position as early track path point&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;To complete the definition of the 'tracking path', position the tracking aperture at a desired point late in the video (it does not have to be the last frame) and click on the menu item &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Use current position as late track path point&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Note: with a 'tracking path' defined, the entire aperture constellation will move in a straight line (defined by the xy and frame number values of the early and late points). While this constellation will not itself follow windshake, stars can continue to 'dance' within the apertures and will be 'followed' by the mask generating routines --- for red apertures, it will look for a bright blob within an 8 pixel radius; for yellow apertures, it will look for the brightest blob anywhere in the aperture. You can always set a very high threshold to force the use of fixed circular masks in apertures where you want to suppress this behavior.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Note: If you delete the yellow aperture (or add a second one), the current tracking path data will be erased.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Note: You can overwrite either of the data points at any time.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string/>
               </property>
              </widget>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_9">
               <item>
                <widget class="QPushButton" name="readAviFileButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Note: avi files are read using OpenCV which employs ffmpeg to do the actual file reading. As a result, a wide range of avi codecs are standardly available.&lt;/p&gt;&lt;p&gt;In particular, avi files using Lagarith compression will be read without problem.&lt;/p&gt;&lt;p&gt;There is a remote possibility that an avi was recorded with an unusual codec and so fail to be read by PyMovie. In that case, you will need to use an external file conversion program that can decode the file as recorded and rewrite it using a more common codec.&lt;/p&gt;&lt;p&gt;.adv files must be Version 2, monochrome.&lt;/p&gt;&lt;p&gt;.aav files must be Version 2, monochrome.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Open AVI/SER/ADV/AAV file</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="createAVIWCSfolderButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button will only be active when a 'bare' avi/ser/adv/aav file is opened (rather than from an AVI/SER/ADV/AAV-WCS folder).&lt;/p&gt;&lt;p&gt;This button has been added because of the decision to perform timestamp OCR only on files that live in an AVI/SER/ADV/AAV-WCS folder. While that is a good way to collect the (many) files that result from OCR, WCS, PyMovie, and PyOTE operations, there are likely to be users that have opted for a flat (or flatter) directory structure. This button will ease (hopefully) the transition to an alternate file organization.&lt;/p&gt;&lt;p&gt;When clicked, a Directory dialog will appear to allow the user to select (or even create) the directory that is to hold the newly created (and filled) AVI/SER/ADV/AAV-WCS folder. It defaults to the directory that holds the opened video file.&lt;/p&gt;&lt;p&gt;The name of the newly created AVI/SER/ADV/AAV-WCS folder will always be the name of the video file with its outermost extension removed.&lt;/p&gt;&lt;p&gt;The folder will then be populated with an alias (Mac) to the avi or a Shortcut (Windows) to the video, so this file structure will be frugal with file space.&lt;/p&gt;&lt;p&gt;Finally, behind-the-scenes, the program simulates the user clicking on &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Select AVI/SER/ADV/AAV-WCS folder&lt;/span&gt; and then clicking on &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Accept&lt;/span&gt; (possible because after a 'creation of AVI/SER/ADV/AAV-WCS folder', the default directory/folder is set to that of the newly created folder). We could not imagine a workflow where a user would &lt;span style=&quot; font-weight:600;&quot;&gt;not&lt;/span&gt; want to immediately start processing the video from within an AVI/SER/ADV/AAV-WCS folder, so the automation seems reasonable and unlikely to get in anyone's way.&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Create AVI/SER/ADV/AAV-WCS folder from file</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="Line" name="line_5">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="selectAviWcsFolderButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;An AVI/SER/ADV/AAV-WCS folder is a container for a single observation video and its related files. As such, there must be only a single .avi/.ser/.adv/.aav file in the folder either explicitly, or by shortcut (Windows) or alias (MacOS). This requirement is enforced.&lt;/p&gt;&lt;p&gt;This folder may also contain a simple text file that contains the Ra and DEC coordinates of the occulted star, filled in by the user through a dialog box that appears when this position information file is found missing during WCS calibration operations.&lt;/p&gt;&lt;p&gt;This folder is also where the WCS calibration data will be placed if the user opts for calibrating frame 0 by making an on-line submission to astrometry.net.&lt;/p&gt;&lt;p&gt;This folder is also the default location for storing csv files and copies of the last lightcurve plots.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; avi files are read using OpenCV which employs ffmpeg to do the actual file reading. As a result, a wide range of avi codecs are standardly available.&lt;/p&gt;&lt;p&gt;In particular, avi files using Lagarith compression will be read without problem.&lt;/p&gt;&lt;p&gt;There is a remote possibility that an avi was recorded with an unusual codec and so fail to be read by PyMovie. In that case, you will need to use an external file conversion program that can decode the file as recorded and rewrite it using a more common codec.&lt;/p&gt;&lt;p&gt;ADV and AAV files must be Version 2 monochrome.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Select AVI/SER/ADV/AAV-WCS folder</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="readFitsFolderButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;A &lt;span style=&quot; color:#fc0107;&quot;&gt;FITS&lt;/span&gt; folder should contain a set of *.fits files, all from a single recording.&lt;/p&gt;&lt;p&gt;There should be no other .fits files in that folder.&lt;/p&gt;&lt;p&gt;It is assumed that the alphabetic ordering of the file names corresponds to sequential frames.&lt;/p&gt;&lt;p&gt;There is a button titled &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Show FITS/SER/ADV/AAV metadata&lt;/span&gt; below that will read and display in the text box (lower left corner) all the metadata entries from the currently displayed .fits/.ser/.adv file image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="toolTipDuration">
                  <number>0</number>
                 </property>
                 <property name="statusTip">
                  <string/>
                 </property>
                 <property name="text">
                  <string>Select FITS folder</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="Line" name="line_6">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="metadataButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button will show (in the text box in the lower left corner of the GUI) all metadata from the currently displayed .fits/.ser/.adv/.aav file.&lt;/p&gt;&lt;p&gt;'metadata' is the text information that is present in the header of the .fits/.ser file or the SYSTEM and USER metadata that is present in an ADV or AAV Version 2 files.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Show FITS/SER/ADV/AAV file metadata</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="enableAdvFrameStatusDisplay">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Data frames in ADV or AAV Version 2 files can have metadata associated with each frame. If this checkbox is checked, and there is metadata available, the metadata will be displayed in the text box (lower left corner of GUI) as each frame is read.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Display frame metadata for ADV/AAV frames</string>
                 </property>
                 <property name="checked">
                  <bool>false</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="Line" name="line_7">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="openBmpPushButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button opens a file selection dialog with all available &amp;quot;finder&amp;quot; image files highlighted --- it is not uncommon to have more than one.&lt;/p&gt;&lt;p&gt;The &amp;quot;finder&amp;quot; images generated by PyMovie have a frame number imbedded in the filename. That frame number will be extracted and used to position the video to that frame before displaying the &amp;quot;finder&amp;quot; image.&lt;/p&gt;&lt;p&gt;By judicious use of static apertures, a constellation of apertures can be placed on the &amp;quot;finder&amp;quot; image and will remain in place when the video frame replaces the &amp;quot;finder&amp;quot; image --- this happens whenever the current frame number is changed.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Open &quot;finder&quot; image</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_6">
            <attribute name="title">
             <string>Timestamp</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_3">
             <item row="1" column="4">
              <spacer name="horizontalSpacer_5">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="3">
              <widget class="QLabel" name="lprofileButtonSpacingLabel">
               <property name="text">
                <string/>
               </property>
              </widget>
             </item>
             <item row="1" column="2">
              <widget class="QLabel" name="vtiSpacerLabel">
               <property name="text">
                <string/>
               </property>
              </widget>
             </item>
             <item row="0" column="1" rowspan="2" colspan="3">
              <layout class="QVBoxLayout" name="verticalLayout_10">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_9">
                 <item>
                  <widget class="QLabel" name="vtiSelectLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This control provides a drop-down list of VTI (video time inserter) models for which OCR (optical character recognition) timestamp processing is available. Selecting an entry will cause a constellation of character extraction boxes to be displayed on the image and there will be an automatic switch to field view and to a frame other than frame 0 --- which is often an improperly formatted frame with duplicates fields.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note that this control will only be active when an AVI/SER-WCS folder is in use AND model digit training has not been completed. Its purpose is to provide a default set of ocr character selection boxes that are approximately in good positions.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;If the character selection boxes enclose the correct characters and are reasonably well-aligned, then you're ready to do fine adjustments to the box positions and, after all the boxes have had their positions optimized, select the digits 0 to 9 that will be used as model digits for the optical character recognition algorithms.&lt;/p&gt;&lt;p&gt;If you're facing a Kiwi timestamp, which has two positions for the timestamp and switches from one to the other when the minutes field changes, you should first select either '&lt;span style=&quot; color:#fc0107;&quot;&gt;Kiwi (left)&lt;/span&gt;' or '&lt;span style=&quot; color:#fc0107;&quot;&gt;Kiwi (right)&lt;/span&gt;' and use whichever best encloses the timestamp characters as the starting point.&lt;/p&gt;&lt;p&gt;If the character boxes are not well aligned, right-click on the/an offending ocr selection box and use the resulting pop-up menu to decide whether one or all ocr boxes need to be moved. The arrow keys control the jogs and their direction.&lt;/p&gt;&lt;p&gt;Finally, record the digits 0 through 9 as model digits to complete the 'training' for the avi in this folder.&lt;/p&gt;&lt;p&gt;If you're using a Kiwi timestamp inserter, you now need to go forward in time until the characters shift to their alternate position. If all model digits are present, PyMovie will detect the position change and use the alternate set of ocr boxes. You now should adjust the alignment of this alternate set of character boxes.&lt;/p&gt;&lt;p&gt;We call the set of character selection boxes and the model digits an OCR profile. OCR profiles can be saved to (and loaded from) a list. This facility is provided because, for a given recording chain --- camera, VTI, frame-grabber ---, it is very likely that the OSD characters will be in the same place for all recordings employing that chain. So once an OCR profile has been established for that chain, it should be saved for reuse.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>select VTI: </string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QComboBox" name="vtiSelectComboBox">
                   <property name="enabled">
                    <bool>false</bool>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note: this control will only be active when an AVI-WCS folder is in use.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;This control provides a drop-down list of VTI (video time inserter) models for which timestamp extraction is available.&lt;/p&gt;&lt;p&gt;Except for the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;SharpCap 8 bit avi&lt;/span&gt; entry, selecting an entry will cause a constellation of character extraction boxes to be displayed on the image (which automatically switches to field view).&lt;/p&gt;&lt;p&gt;If the character selection boxes enclose the correct characters and are well-aligned, then you're ready to go.&lt;/p&gt;&lt;p&gt;If you're dealing with a Kiwi timestamp, which has two positions for the timestamp character --- a left position and a right position --- you should first select the position that best encloses the timestamp characters in the displayed frame.&lt;/p&gt;&lt;p&gt;If the character boxes are not well aligned, use the jogging buttons to the right to achieve a better alignment.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; text-decoration: underline; color:#fc0107;&quot;&gt;Note: Kiwi timestamp boxes must only be adjusted (jogged) when the timestamp position is the same as that of frame 1.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;The &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;SharpCap 8 bit avi&lt;/span&gt; entry is special in that no OCR (optical character recognition) is needed. This is because the SharpCap program encodes a 64 bit timestamp in the first 8 bytes of the image and that is where PyMovie gets its timestamp information. So, there are no character selection boxes and there is no need to save a profile.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="currentText">
                    <string/>
                   </property>
                   <property name="currentIndex">
                    <number>-1</number>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QPushButton" name="loadCustomProfilesButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button is only active whan an AVI/SER-WCS folder is open.&lt;/p&gt;&lt;p&gt;In that case, it displays the list of available custom ocr profiles (character selection box placements and model digits) retrieved from the file found in your user home directory with the name pymovie-ocr-profiles.p&lt;/p&gt;&lt;p&gt;In the dialog box that appears, you can:&lt;/p&gt;&lt;p&gt;1) edit the names of previously saved profiles or &lt;/p&gt;&lt;p&gt;2) give a name to and save the current profile or&lt;/p&gt;&lt;p&gt;3) delete a saved profile or&lt;/p&gt;&lt;p&gt;4) select a profile and 'load it'. This will overwrite the currently active ocr profile.&lt;/p&gt;&lt;p&gt;To share (or get a profile from another user), these are the files in the AVI-WCS folder that comprise the ocr profile:&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;custom-boxes-upper.p&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;custom-boxes-lower.p&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;custom-digits.p&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;formatter.txt&lt;/span&gt;&lt;/p&gt;&lt;p&gt;Sharing just those files is all that is required. Put them in your AVI/SER-WCS folder and then use this dialog to save that profile with a name of your choosing into your personal list of custom ocr profiles.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Select/save custom ocr profile</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="clearOcrDataButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button deletes all OCR profile files from the current folder--- it's a 'clean start-over' to be used when an OCR setup/training session has gone pear-shaped in a big way.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Clear ocr data</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item row="0" column="0">
              <spacer name="horizontalSpacer_4">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="2" column="2">
              <spacer name="verticalSpacer">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_3">
            <attribute name="title">
             <string>Hot Pixels</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_4">
             <item row="0" column="0">
              <spacer name="horizontalSpacer_6">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="2">
              <spacer name="horizontalSpacer_8">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_6">
               <item>
                <widget class="QPushButton" name="hotPixelHelpButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The primary use of hot-pixel removal is to help produce clean &amp;quot;finder&amp;quot; images. If there are hot-pixels in frames, they appear on stacked &amp;quot;finder&amp;quot; images as distracting streaks (if the star field is in motion between frames) or false/spurious stars that make it more difficult to correlate a star chart with the &amp;quot;finder&amp;quot; image and thus to locate the desired target star.&lt;/p&gt;&lt;p&gt;A second reason to remove hot-pixels is that it makes the images easier to look at during 'animations' (when you click a 'play' button).&lt;/p&gt;&lt;p&gt;The use of hot-pixel removal during analysis should be restricted to those rare occasions where the interaction of the target (or tracking) star with a hot-pixel must be mitigated. But, the resulting lightcurves have been modified, maybe for the good, but maybe not. In such cases, run the analysis both with and without hot-pixel removal and choose the 'without removal' analysis preferentially.&lt;/p&gt;&lt;p&gt;One aspect of hot-pixels that must be dealt with is that they often &amp;quot;flicker&amp;quot;.  As a result, the hot-pixel constellation will change to some degree from frame to frame. This is a little hard to deal with when generating a custom hot-pixel list and is a good reason to select the 3x3 (or 5x5) median filter rather than a custom hot-pixel list. Such a filter is applied to each frame as read without any pre-knowledge being required.&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Hot-pixel removal explanation/help</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="hotPixelEraseOff">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When selected, all hot-pixel removal is disabled.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="layoutDirection">
                  <enum>Qt::LeftToRight</enum>
                 </property>
                 <property name="text">
                  <string>No hot-pixel erase</string>
                 </property>
                 <property name="checked">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="hotPixelEraseFromList">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If a custom hot pixel list is loaded, checking this box will cause the erasure of hot pixels during frame reading from the video using this specialized list and hot-pixel removal technique.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Beware:&lt;/span&gt; there is always the possibility of gerating a spurious 'dip' in a light curve that has a hot pixel group overlapping a star image, particularly on a drift-through video because every pixel identified in the list has its value replaced by the procedure explained below with a value that essentially removes it from the calculation of the star intensity.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#0000ff;&quot;&gt;Hot pixel erasure is performed on a frame by frame basis by calculating an average background for that frame through a Robust Mean calculation performed on a 51 x 51 pixel aperture placed at the center of the frame. Then, this value is used to overwrite the pixel value at each coordinate point present in the hot pixel list.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;It is usually better and easier to use a 3x3 median filter to remove hot-pixels --- there is no need to generate the hot-pixel list by laboriously placing apertures on hot-pixel groups. This always works well when hot-pixels are isolated, that is, actually single pixels. Such a filter has a minimal (but detectable) effect on a star image that covers many dozens of pixels and so &lt;/span&gt;&lt;span style=&quot; font-style:italic; color:#000000;&quot;&gt;could&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; be allowed to be active during an analysis. It would remove positive spikes in the light curve when the star drifts through a hot pixel, but when the star is very dim, the median filter may possibly reduce the intensity even more. If you have a hot-pixel interference problem with a lightcurve, try the analysis both ways: with and without hot-pixel removal --- give preference to the 'without' version.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>hot-pixel erase from custom list</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="hotPixelErase3x3median">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When this radio button is selected, a 3x3 median filter is applied to all frames as they are read.&lt;/p&gt;&lt;p&gt;A median filter replaces the pixel value in the center by the median value of all 9 pixels.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;It is usually better and easier to use a 3x3 median filter to remove hot-pixels --- there is no need to place apertures on hot-pixels to create a custom list. This always works well when hot-pixels are isolated, that is, actually single pixels. Such a filter has a minimal (but detectable) effect on a star image that covers many dozens of pixels and so &lt;/span&gt;&lt;span style=&quot; font-style:italic; color:#000000;&quot;&gt;could&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; be allowed to be active during an analysis. It would remove positive spikes in the light curve when the star drifts through a hot pixel, but when the star is very dim, the median filter may possibly reduce the intensity even more. If you have a hot-pixel interference problem with a lightcurve, try the analysis both ways: with and without hot-pixel removal.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>hot-pixel erase by 3x3 median filtering</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QRadioButton" name="hotPixelErase5x5median">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When this radio button is selected, a 5x5 median filter is applied to all frames as they are read.&lt;/p&gt;&lt;p&gt;This median filter replaces the pixel value in the center by the median value of all 25 pixels in the 5x5 region.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;It is usually better to use a 3x3 median filter to remove hot-pixels. Such a filter has a minimal (but detectable) effect on a star image that covers many dozens of pixels and so &lt;/span&gt;&lt;span style=&quot; font-style:italic; color:#000000;&quot;&gt;could&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; be allowed to be active during an analysis. It would remove positive spikes in the light curve when the star drifts through a hot pixel, but when the star is very dim, the median filter may possibly reduce the intensity even more. If you have a hot-pixel interference problem with a lightcurve, try the analysis both ways: with and without hot-pixel removal.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Choose to use a 5x5 median filter if your hot-pixels appear in pairs or small groups as well as singly but expect a more significant effect on star images. This effect is immaterial for the production of &amp;quot;finder&amp;quot; images (it's primary intended use) but caution should be used if you allow this to be active during analysis --- it will affect the lightcurve.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;If you have extended clumps of hot-pixels that are not small relative to a 5x5 region, you will be forced to use a custom hot-pixel list generated by placing apertures on the offending groups and clicking the &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#0000ff;&quot;&gt;extract hot-pixel list&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; button.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>hot-pixel erase by 5x5 median filtering</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="loadHotPixelProfileButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you have created, named, and saved hot-pixel lists from previous videos captured with the current camera, clicking this button will bring up a table of those hot-pixel profiles.&lt;/p&gt;&lt;p&gt;Selecting one of those will restore the apertures and the hot-pixel list of the original session. This gives you an opportunity to verify that the list is still relevant and to make any changes that may be required.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>load/save/edit hot-pixel profiles</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="createHotPixelListButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click this button after placing apertures on all of the hot pixel groups present in the image. Remember, the hot-pixel constellation may be different from frame to frame.&lt;/p&gt;&lt;p&gt;This list will be used to remove those hot-pixels from each frame that is to be used in the creation of a &amp;quot;finder&amp;quot; image. This is desirable because hot-pixels, which do not move, often produce annoying streaks or false/spurious stars in the &amp;quot;finder&amp;quot; images.&lt;/p&gt;&lt;p&gt;Even when hot-pixels don't produce streaks (guidance of the telescope has to very good in such a case) it is also useful to remove hot pixel groups so that they don't add confusing asterisms --- it's easier to correlate a finder image without spurious 'stars' that don't appear in a sky chart.&lt;/p&gt;&lt;p&gt;Use the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;load/save/edit hot-pixels profiles&lt;/span&gt; button above if you want to to name and save this list into a hot-pixel list database for future use. Since the hot pixel constellation for a given camera/camera setting will change slowly with time, such saved profiles can be quickly recalled and will often be sufficient for hot pixel removal. At the very least, it will serve as good starting point.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>extract hot-pixel list from apertures that you have placed</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_3">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab">
            <attribute name="title">
             <string>&quot;finder&quot;</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_5">
             <item row="0" column="0">
              <spacer name="horizontalSpacer_9">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_3">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_11">
                 <item>
                  <widget class="QPushButton" name="alignWithStarInfoButton">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;To assist in locating a dim target star, an enhanced &amp;quot;finder&amp;quot; image can be generated by aligning and stacking (summing) a number of frames.&lt;/p&gt;&lt;p&gt;This intensified image can then be used for positioning an aperture on the target star, even though that star might be invisible in a single frame.&lt;/p&gt;&lt;p&gt;The simplest and easiest to use method for performing image alignment is use an aperture with a name that starts with 'stack' to follow a bright star through the frames that are to be aligned --- the xy translations of that star are used subsequently to align the frames. &lt;/p&gt;&lt;p&gt;To use the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: star&lt;/span&gt; method: &lt;/p&gt;&lt;p&gt;1) Place a snap-to-blob aperture on the desired star while at the desired starting frame.&lt;/p&gt;&lt;p&gt;2) Give that aperture a name that starts with 'stack' (case-insensitive)&lt;/p&gt;&lt;p&gt;3) Fill in the top and bottom redact numbers (used for removing timestamp overlays).&lt;/p&gt;&lt;p&gt;4) Specify the number of frames to stack. &lt;/p&gt;&lt;p&gt;5) Click on Generate &amp;quot;finder&amp;quot;. What you will see is an &amp;quot;analysis&amp;quot; run (with the 'stack' aperture following the star), followed by an image alignment run, followed by the appearance of the &amp;quot;finder&amp;quot; image. Note: This is an actual analysis run so data will be collected. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;General notes:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The edit boxes labelled 'redact top' and 'redact bottom' specify how many lines to remove from the top and bottom of the image to get rid of timestamp or other non-image data.&lt;/p&gt;&lt;p&gt;The edit box labelled 'num frames' specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; if timestamps were present (but redacted), the &amp;quot;finder&amp;quot; image will show the timestamp of the first frame in the stack, the so-called reference frame that all others are aligned/registered against to build the 'stack'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Align: star</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QPushButton" name="alignWithTwoPointTrackInfoButton">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;To assist in locating a dim target star, an enhanced &amp;quot;finder&amp;quot; image can be generated by aligning and stacking (summing) a number of frames.&lt;/p&gt;&lt;p&gt;This intensified image can then be used for positioning an aperture on the target star, even though that star might be invisible in a single frame.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: 2 point track&lt;/span&gt; requires that a 2 point tracking path be established for the video. A 2 point tracking path is a bit tedious to set up but works very well for frame alignment although it will not follow windshake. Use &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: star&lt;/span&gt; whenever there is much windshake. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;General notes:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The edit boxes labelled 'redact top' and 'redact bottom' specify how many lines to remove from the top and bottom of the image to get rid of timestamp or other non-image data.&lt;/p&gt;&lt;p&gt;The edit box labelled 'num frames' specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; if timestamps were present (but redacted), the &amp;quot;finder&amp;quot; image will show the timestamp of the first frame in the stack, the so-called reference frame that all others are aligned/registered against to build the 'stack'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Align: 2 point track</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_15">
                 <property name="spacing">
                  <number>-1</number>
                 </property>
                 <item>
                  <widget class="QLabel" name="finderRedactTopLinesLabel">
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is used to specify how many lines from the image top to remove to get rid of timestamp information.&lt;/p&gt;&lt;p&gt;For generating a &amp;quot;finder&amp;quot; image, getting rid of the timestamp is &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;essential&lt;/span&gt; for getting a good image to image registration based on the star field movement. If the timestamp is not removed, then the stacking process will likely register on the timestamp instead.&lt;/p&gt;&lt;p&gt;This entry is also used when preparing a frame for submission to nova.astrometry.net for WCS calibration.&lt;/p&gt;&lt;p&gt;If there is a timestamp overlay, its presence may make the WCS location and calibration harder (takes longer) for nova.astrometry.net. So, before submitting an image to nova.astrometry.net, we like to 'redact' the timestamp data by replacingthose lines with the average background (sampled from the center of the image). The value in this box controls how many lines from the top get this treatment.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>redact: top </string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="redactLinesTopEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string/>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="redactLinesBottomEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="finderRedactBottomLinesLabel">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is used to specify how many lines from the image bottom to remove to get rid of timestamp information.&lt;/p&gt;&lt;p&gt;For generating a &amp;quot;finder&amp;quot; image, getting rid of the timestamp is &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;essential&lt;/span&gt; for getting a good image to image registration based on the star field movement. If the timestamp is not removed, then the stacking process will likely register on the timestamp instead.&lt;/p&gt;&lt;p&gt;This entry is also used when preparing a frame for submission to nova.astrometry.net for WCS calibration.&lt;/p&gt;&lt;p&gt;If there is a timestamp overlay, its presence may make the WCS location and calibration harder (takes longer) for nova.astrometry.net. So, before submitting an image to nova.astrometry.net, we like to 'redact' the timestamp data by replacingthose lines with the average background (sampled from the center of the image). The value in this box controls how many lines from the bottom get this treatment.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>bottom   </string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
                   </property>
                   <property name="indent">
                    <number>-1</number>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_16">
                 <item>
                  <widget class="QLabel" name="finderNumFramesLabel">
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>16777215</width>
                     <height>16777215</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This edit box specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;Of course, your objective might be to get a 'pretty picture' of the star field. If so, have at it, but be aware that stars may 'appear' for which an occultation light curve cannot be extracted when processing is done frame by frame.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>num frames:</string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="numFramesToStackEdit">
                   <property name="minimumSize">
                    <size>
                     <width>60</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>60</width>
                     <height>16777215</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string/>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_34">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_33">
                 <item>
                  <widget class="QPushButton" name="stackFramesButton">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;To assist in locating a dim target star, an enhanced &amp;quot;finder&amp;quot; image can be generated by aligning and stacking (summing) a number of frames.&lt;/p&gt;&lt;p&gt;This intensified image can then be used for positioning an aperture on the target star, even though that star might be invisible in a single frame.&lt;/p&gt;&lt;p&gt;There are two available algorithms for performing image alignment: &lt;/p&gt;&lt;p&gt;1) &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: star&lt;/span&gt; uses an aperture with a name that starts with 'stack' to follow a bright star through the frames that are to be aligned --- the xy translations of that star are used subsequently to align the frames. This is the simplest and most reliable method to use and takes priority over methods 2 and 3. Click the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: star&lt;/span&gt; button for how-to-use details.&lt;/p&gt;&lt;p&gt;2) &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: 2 point track&lt;/span&gt; uses a 2 point tracking path that has been established for the video. This is more tedious to set up but also works very well for frame alignment although it will not follow windshake. Use 1) whenever there is much windshake. Click the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Align: 2 point track&lt;/span&gt; button for how-to-use details.&lt;/p&gt;&lt;p&gt;The &amp;quot;finder' image is calculated by summing the (aligned) frame stack, dividing that sum by the number of frames.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;General notes:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The edit boxes labelled 'redact top' and 'redact bottom' specify how many lines to remove from the top and bottom of the image to get rid of timestamp or other non-image data.&lt;/p&gt;&lt;p&gt;The edit box labelled 'num frames' specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; if timestamps were present (but redacted), the &amp;quot;finder&amp;quot; image will show the timestamp of the first frame in the stack, the so-called reference frame that all others are aligned/registered against to build the 'stack'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Generate &quot;finder&quot;</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QPushButton" name="openFinderPushButton">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button opens a file selection dialog with all available &amp;quot;finder&amp;quot; image files highlighted --- it is not uncommon to have more than one.&lt;/p&gt;&lt;p&gt;The &amp;quot;finder&amp;quot; images generated by PyMovie have a frame number imbedded in the filename. That frame number will be extracted and used to position the video to that frame before displaying the &amp;quot;finder&amp;quot; image.&lt;/p&gt;&lt;p&gt;By judicious use of static apertures, a constellation of apertures can be placed on the &amp;quot;finder&amp;quot; image and will remain in place when the video frame replaces the &amp;quot;finder&amp;quot; image --- this happens whenever the current frame number is changed.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Open &quot;finder&quot;</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QProgressBar" name="stackerProgressBar">
                 <property name="value">
                  <number>0</number>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLineEdit" name="finderMethodEdit">
                 <property name="readOnly">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item row="0" column="2">
              <spacer name="horizontalSpacer_10">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_4">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_7">
            <attribute name="title">
             <string>Image/Plot</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_6">
             <item row="0" column="0">
              <spacer name="horizontalSpacer_13">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_11">
               <item>
                <widget class="QCheckBox" name="flipImagesLeftToRightCheckBox">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click this button to flip the image left to right.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Flip images left/right</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="flipImagesTopToBottomCheckBox">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click this button to invert the Y axes on the main image as well as the two thumbnails.&lt;/p&gt;&lt;p&gt;This control is necessary because: the origin of composite video images is the upper left corner of the image; for .fits files, the origin is at the lower left corner of the image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Flip images top/bottom</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="Line" name="line_3">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="cascadeCheckBox">
                 <property name="minimumSize">
                  <size>
                   <width>0</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>16777215</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="sizeIncrement">
                  <size>
                   <width>0</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If checked, lightcurve plots will cascade from the upper left of the monitor diagonally toward the lower right.&lt;/p&gt;&lt;p&gt;If unchecked, lightcurve plots will stack on top of each other in the center of the monitor.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="layoutDirection">
                  <enum>Qt::LeftToRight</enum>
                 </property>
                 <property name="text">
                  <string>cascade the lightcurve plots</string>
                 </property>
                 <property name="checked">
                  <bool>true</bool>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_12">
                 <item>
                  <widget class="QLabel" name="plotSymbolSizeLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This spinner sets the size of the symbols used in the plots to show a data value position. &lt;/p&gt;&lt;p&gt;If you open a set of plots and would like to see smaller or larger dots, simply close the plots, change the symbol size using this spinner and reopen the plots.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Plot symbol size:</string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="plotSymbolSizeSpinBox">
                   <property name="toolTip">
                    <string/>
                   </property>
                   <property name="minimum">
                    <number>1</number>
                   </property>
                   <property name="maximum">
                    <number>20</number>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="Line" name="line_4">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_14">
                 <item>
                  <widget class="QLabel" name="gammaLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If the video was recorded with a gamma setting other than 1.00, put that value in this spin box (it can be directly edited if the 0.05 steps of the spinner are inappropriate).&lt;/p&gt;&lt;p&gt;If a value other than 1.00 is present in this edit box, all images will have a gamma reversal applied on a pixel by pixel basis. This is desirable when more accurate photometrics are needed as it improves the linearity of the pixel response to light.&lt;/p&gt;&lt;p&gt;The reversal equation used is: &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;xnew = maxval * ((x / maxval) ^ (1 / gamma))&lt;/span&gt; where maxval is either 65535 (for 16 bit images) or 255 (for 8 bit images).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>gamma</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QDoubleSpinBox" name="gammaSettingOfCamera">
                   <property name="minimum">
                    <double>0.250000000000000</double>
                   </property>
                   <property name="maximum">
                    <double>1.000000000000000</double>
                   </property>
                   <property name="singleStep">
                    <double>0.050000000000000</double>
                   </property>
                   <property name="value">
                    <double>1.000000000000000</double>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
             <item row="0" column="2">
              <spacer name="horizontalSpacer_14">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_5">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_2">
            <attribute name="title">
             <string>WCS</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_7">
             <item row="0" column="0">
              <spacer name="horizontalSpacer_15">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>180</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_8">
               <item>
                <widget class="QPushButton" name="manualWcsButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="MinimumExpanding" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>0</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>16777215</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button starts a 'manual' WCS calibration (user guided reference star designation).&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Manual WCS calibration&lt;/span&gt; utilizes two stars with known icrs coordinates together with their xy position in the image to compute a mapping from icrs coordinates to pixel coordinates.&lt;/p&gt;&lt;p&gt;When this button is pressed, all previous manual WCS calibration data is erased (you have to confirm this action). Then the work flow expected is:&lt;/p&gt;&lt;p&gt;1) Use the VizieR query to get the icrs coordinates of the first reference star. (So do your star chart with UCAC4 annotations).&lt;/p&gt;&lt;p&gt;2) Put an aperture on that star.&lt;/p&gt;&lt;p&gt;3) Adjust (if necessary) the aperture so that the centering is satisfactory.&lt;/p&gt;&lt;p&gt;4) Right click on the aperture and click on &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Set RA Dec (from VizieR query results)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;5) Repeat steps 1...4 for the second reference star.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;6) If you have already defined the target coordinates, an aperture will immediately appear at the proper image location, otherwise ...&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;7) ... use the VizieR query to get the target coordinates and then click the &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Set as target&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; button. The target aperture will then appear.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Manual WCS calib</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="Line" name="line">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="frameToFitsButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="MinimumExpanding" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>150</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>1677215</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button is used to get a WCS calibration for the current image by utilizing the on-line service nova.astrometry.net&lt;/p&gt;&lt;p&gt;If this service fails (see discussion below) then you could try the&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt; Manual WCS calibration&lt;/span&gt; button. It prompts you to put an aperture around two known stars in your image by using a star chart (preferably with UCAC4 star designations). If those stars are sufficiently far apart, we can use the icrs coordinates in conjuction with the xy position of the aperture to 'calibrate' that image.&lt;/p&gt;&lt;p&gt;nova.astrometry.net is designed to do 'blind' identification and WCS calibration on star field images. But it will not be able to identify images that have a too narrow field of view. If your field of view is under 15 arcmin, it is not likely to be able to calibrate that image and it will spend a long time (many minutes) trying. If an image is going to be successfully identified, it will take only a few seconds of cpu time after getting a job assigned (which takes one to two minutes).&lt;/p&gt;&lt;p&gt;Note: another possible reason for a 'failure' is that the camera pixels used for the video were not square and the proper pixel width and height values were not specified properly.&lt;/p&gt;&lt;p&gt;Clicking this button reads the current frame and redacts the timestamp area by replacing all bytes in the timestamp zone with the Robust background (constant value).&lt;/p&gt;&lt;p&gt;The number of lines to be redacted are controlled by the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;redact lines&lt;/span&gt; edit box.&lt;/p&gt;&lt;p&gt;This redacted image is written as a file suitable for submission to nova.astrometry.net together with a user entered target star position (RA and Dec at J2000). The image will have been resized based on the pixel width and height information for non-square pixels in the source camera.&lt;/p&gt;&lt;p&gt;The entries for the star position values are entered into a star position dialog that will appear if no star position has yet been defined.&lt;/p&gt;&lt;p&gt;That same dialog form provides for the entry of the user's nova.astrometry.net api key. This value will be 'sticky' (preserved across runs of PyMovie) and is required for submitting images for WCS calibration. It's easy (and free) to obtain. Simply go to nova.astrometry.net and sign in by clicking on your choice of credential supplier, no need to create a username/password combination. After signing in, click on My Profile and your api key will be displayed there.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>astrometry WCS calib</string>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_8">
                 <property name="spacing">
                  <number>-1</number>
                 </property>
                 <item>
                  <widget class="QLabel" name="wcsRedactTopLinesLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is used to specify how many lines from the image top to remove to get rid of timestamp information when preparing a frame for submission to nova.astrometry.net for WCS calibration.&lt;/p&gt;&lt;p&gt;If there is a timestamp overlay, its presence may make the WCS location and calibration harder (take longer) for nova.astrometry.net. So, before submitting an image to nova.astrometry.net, we like to 'redact' the timestamp data by replacing those lines with the average background (sampled from the center of the image). The value in this box controls how many lines from the top get this treatment.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>     redact: top</string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="wcsRedactLinesTopEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="wcsRedactLinesBottomEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="wcsRedactBottomLinesLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is used to specify how many lines from the image bottom to remove to get rid of timestamp information when preparing a frame for submission to nova.astrometry.net for WCS calibration.&lt;/p&gt;&lt;p&gt;If there is a timestamp overlay, its presence may make the WCS location and calibration harder (take longer) for nova.astrometry.net. So, before submitting an image to nova.astrometry.net, we like to 'redact' the timestamp data by replacingthose lines with the average background (sampled from the center of the image). The value in this box controls how many lines from the bottom get this treatment.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>bottom</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_7">
                 <property name="spacing">
                  <number>-1</number>
                 </property>
                 <item>
                  <widget class="QLabel" name="pixelHeightLabel">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>90</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>16777215</width>
                     <height>16777215</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If the camera used for the video does not have square pixels, the image sent to nova.astrometry.net for WCS calibration will need to have the image resized to compensate for the rectangular shape of the camera pixels. This is required so that the plate scale (arcseconds/pixel) will be the same in the x direction as the y direction.&lt;/p&gt;&lt;p&gt;This correction is needed for manual WCS calibration as well, but is accomplished in a different manner: a rescaling of x and y dimensions during the calculations rather than an image resize.&lt;/p&gt;&lt;p&gt;If you know that the camera pixels are square, enter the same number for pixel height and pixel width. The units don't matter. The number used doesn't matter. All that matters is that pixelWidth / pixelHeight = 1.000 (i.e., pixel aspect ratio = 1.000).&lt;/p&gt;&lt;p&gt;If the camera pixels are not square, but instead are rectangular, enter the correct width and height of the pixels in these edit boxes. The units used do not matter. All that matters is the ratio of these two numbers.&lt;/p&gt;&lt;p&gt;Example: for a Watec 910 camera, enter 9.8 as pixelHeight and 8.4 as pixelWidth. (The units are actually microns, but that does not matter.)&lt;/p&gt;&lt;p&gt;The RunCam Night Eagle Pro II camera has square pixels (6x6 microns). You can enter a 6 in both edit boxes for this camera.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="layoutDirection">
                    <enum>Qt::RightToLeft</enum>
                   </property>
                   <property name="text">
                    <string> pixel height: </string>
                   </property>
                   <property name="alignment">
                    <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="pixelHeightEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="pixelWidthEdit">
                   <property name="minimumSize">
                    <size>
                     <width>40</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>40</width>
                     <height>16777215</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="pixelWidthLabel">
                   <property name="minimumSize">
                    <size>
                     <width>90</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="maximumSize">
                    <size>
                     <width>16777215</width>
                     <height>16777215</height>
                    </size>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If the camera used for the video does not have square pixels, the image sent to nova.astrometry.net for WCS calibration will need to have the image resized to compensate for the rectangular shape of the camera pixels. This is required so that the plate scale (arcseconds/pixel) will be the same in the x direction as the y direction.&lt;/p&gt;&lt;p&gt;This correction is needed for manual WCS calibration as well, but is accomplished in a different manner: a rescaling of x and y dimensions during the calculations rather than an image resize.&lt;/p&gt;&lt;p&gt;If you know that the camera pixels are square, enter the same number for pixel height and pixel width. The units don't matter. The number used doesn't matter. All that matters is that pixelWidth / pixelHeight = 1.000 (i.e., pixel aspect ratio = 1.000).&lt;/p&gt;&lt;p&gt;If the camera pixels are not square, but instead are rectangular, enter the correct width and height of the pixels in these edit boxes. The units used do not matter. All that matters is the ratio of these two numbers.&lt;/p&gt;&lt;p&gt;Example: for a Watec 910 camera, enter 9.8 as pixelHeight and 8.4 as pixelWidth. (The units are actually microns, but that does not matter.)&lt;/p&gt;&lt;p&gt;The RunCam Night Eagle Pro II camera has square pixels (6x6 microns). You can enter a 6 in both edit boxes for this camera.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>: pixel width</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="Line" name="line_2">
                 <property name="frameShadow">
                  <enum>QFrame::Plain</enum>
                 </property>
                 <property name="lineWidth">
                  <number>5</number>
                 </property>
                 <property name="midLineWidth">
                  <number>5</number>
                 </property>
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                </widget>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_5">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item>
                  <widget class="QLabel" name="ucac4Label">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The entry here must be of the form XXX-XXXXXX otherwise you will get a 'star not found' message instead of the coordinates you were seeking.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>UCAC4</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLineEdit" name="starIdEdit">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The entry here &lt;span style=&quot; text-decoration: underline;&quot;&gt;must&lt;/span&gt; be of the form XXX-XXXXXX otherwise you will get a 'star not found' message instead of the coordinates you were seeking.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QPushButton" name="queryVizierButton">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button triggers a query to Vizier for the J2000 coordinates of a UCAC4 star. The coordinates found are displayed in the edit box below in hms dms format.&lt;/p&gt;&lt;p&gt;The UCAC4 caltalog is used (VizieR catalog I/322A)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Query VizieR</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_13">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item>
                  <widget class="QLineEdit" name="coordinatesEdit">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>260</width>
                     <height>0</height>
                    </size>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QPushButton" name="saveTargetLocButton">
                   <property name="enabled">
                    <bool>false</bool>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are working in a FITS folder or an AVI-WCS folder, clicking this button causes the location in the edit box to the left to be written to the file &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;target-location.txt &lt;/span&gt;in that folder.  This is how one sets the coordinates of star-to-be-occulted --- the 'target'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Set as target</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
             <item row="0" column="2">
              <spacer name="horizontalSpacer_16">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>180</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_6">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>26</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_8">
            <attribute name="title">
             <string>Misc.</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_8">
             <item row="0" column="2">
              <spacer name="horizontalSpacer_18">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_12">
               <item>
                <widget class="QCheckBox" name="lunarCheckBox">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Only for use with lunar occultations&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;When an aperture is placed on a sunlit lunar limb, it will contain pixels from the sky, pixels from the lunar limb, and pixels from the about-to-be-occulted star. This is also true for a fixed circular sampling mask positioned on the star. In that situation, what is the 'correct' way to subtract 'background'? Limovie has answered that question by providing a special aperture (Avoid Sunlit Face) that can be positioned so that a semi-circular area can be oriented so that only sky pixels are contained. Those pixels are then used to calculate the background value.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;When this box is checked, PyMovie does effectively the same thing but by a different method: it uses a statistical analysis of all the pixels in an aperture and sorts out which are from the sky and which are not by how their intensities are distributed. You can check what is happening by clicking on the Plot Robust Mean button to see where it placed the green line that shows the calculated mean value.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>lunar</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QCheckBox" name="useYellowMaskCheckBox">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If there is significant wind shake during the occultation, the use of a default circular mask is inappropriate because we know that the star image is not circular but rather more snake-like.&lt;/p&gt;&lt;p&gt;However, it is reasonable to expect that the wanderings of the tracking star are the same as the wanderings of the target star and so a mask computed from the tracking star, while it will probably contain more pixels than one might like, has the correct shape to be used for the target star as well.&lt;/p&gt;&lt;p&gt;Checking this box will cause the 'yellow' mask to be used for measuring all target images.&lt;/p&gt;&lt;p&gt;This is a 'last hope' option: good luck with it.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>yellow mask = default</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="view3DButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button opens a new window that shows a 3D rendering of the Thumbnail One image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Show 3D thumbnail</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item row="0" column="0">
              <spacer name="horizontalSpacer_17">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_7">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_4">
            <attribute name="title">
             <string>Help</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout_9">
             <item row="0" column="2">
              <spacer name="horizontalSpacer_20">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="0">
              <spacer name="horizontalSpacer_19">
               <property name="orientation">
                <enum>Qt::Horizontal</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>40</width>
                 <height>20</height>
                </size>
               </property>
              </spacer>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_7">
               <item>
                <widget class="QToolButton" name="toolButton_2">
                 <property name="font">
                  <font>
                   <pointsize>13</pointsize>
                  </font>
                 </property>
                 <property name="text">
                  <string>The best and most relevant help is obtained by right-clicking
on buttons. Most buttons have help info built into them.
There are some labels that provide the same service ---
this is used when the GUI element already has a right-click
action associated with it.</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QToolButton" name="twoPointHelpButton">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="font">
                  <font>
                   <pointsize>13</pointsize>
                  </font>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Two point tracking is a tool used primarily in conjunction with drift-through videos.&lt;/p&gt;&lt;p&gt;Two point tracking allows a 'tracking path' to be associated with a yellow aperture by using it to locate a star that is visible at two points in the video sequence and then recording the coordinate/frame values at those two points. &lt;/p&gt;&lt;p&gt;A 'tracking path' is a straight line across an image that is to be followed frame-by-frame by the center of a yellow tracking aperture as the video is analyzed. This can be used to 'follow' an object that disappears completely, particularly useful in the situation where there are no other stars that remain visible enough to provide a separate tracking reference. And, as always, the presence of a yellow aperture locks all apertures into a 'constellation' that moves as a unit.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; to ease the task of re-positioning the yellow aperture as you advance to later frames, jogging on newly added apertures is automatically enabled.&lt;/p&gt;&lt;p&gt;To define a 'tracking path', use a &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;single&lt;/span&gt; yellow aperture and position that aperture at a desired point early in the video (it does &lt;span style=&quot; font-weight:600;&quot;&gt;not&lt;/span&gt; have to be frame 0) and click on the menu item &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Use current position as early track path point&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;To complete the definition of the 'tracking path', position the tracking aperture at a desired point late in the video (it does not have to be the last frame) and click on the menu item &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Use current position as late track path point&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; with a 'tracking path' defined, the entire aperture constellation will move in a straight line (defined by the xy and frame number values of the early and late points). While this constellation will not itself follow windshake, stars can continue to 'dance' within the apertures and will be 'followed' by the mask generating routines --- for red apertures, it will look for a bright blob within an 8 pixel radius; for yellow apertures, it will look for the brightest blob anywhere in the aperture. You can always set a very high threshold to force the use of fixed circular masks in apertures where you want to suppress this behavior.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; If you delete the yellow aperture (or add a second one), the current tracking path data will be erased.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; You can overwrite either of the data points at any time.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;If an aperture group is saved, any tracking path defined will be saved as well.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Help for two point tracking</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QToolButton" name="transportHelp">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="font">
                  <font>
                   <pointsize>13</pointsize>
                  </font>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Context menus invoked by the usual mouse right-click are used to place measurement apertures, change their properties, name them, remove them, and control the image view itself.&lt;/p&gt;&lt;p&gt;For controlling the image view itself, a left-click and hold will allow the image to be panned in all directions with subsequent mouse movement.&lt;/p&gt;&lt;p&gt;A right-click and hold allows zooming in the direction of subsequent mouse movement.&lt;/p&gt;&lt;p&gt;A right-click in a region that does not contain a measuring aperture will cause a context menu to appear that has &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add snap-to-blob aperture&lt;/span&gt; and &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add static aperture (no snap)&lt;/span&gt; menu entries. You will almost always be using the 'snap-to-blob' aperture; &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add static aperture (no snap&lt;/span&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;)&lt;/span&gt; is used for placing an aperture exactly where you want it (i.e., no snap). This will most commonly be used for placing a &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;white&lt;/span&gt; aperture (see below) and for placing an aperture on a &amp;quot;finder&amp;quot; image.&lt;/p&gt;&lt;p&gt;On this same context menu, there are menu items for controlling aspects of the image view itself; the most used menu item will be &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;View all&lt;/span&gt;, used after a &lt;span style=&quot; font-weight:600; text-decoration: underline; color:#fc0107;&quot;&gt;scroll wheel zoom&lt;/span&gt; or &lt;span style=&quot; text-decoration: underline; color:#fc0107;&quot;&gt;left-click-drag-for-pan&lt;/span&gt; have been used to adjust the view to return the size and position to the original condition.&lt;/p&gt;&lt;p&gt;A right-click &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;inside&lt;/span&gt; a measurement aperture brings up a context menu that allows you to change propertires of the aperture. You will be most concerned with the color of the aperture:&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;yellow&lt;/span&gt; aperture around a bright star causes that star to be used as a tracking reference. If you select a single star as a tracking reference, translation movements (the image as a whole moves some number of pixels up, down, and sideways) of the star field will be tracked. The aperture constellation as a whole will be translated.&lt;/p&gt;&lt;p&gt;You can add a second yellow aperture (no more than two are allowed) if there a possibility of field rotation as well as field translation. In this case, tracking equations are used that allow for the aperture constellation as a whole to be both rotated and translated in order to follow the star field.&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;green&lt;/span&gt; aperture is connected to the threshold setting spinner to make it easier to modify threshold settings. That spinner has the longish title: &lt;span style=&quot; color:#fc0107;&quot;&gt;set mskth counts above bkavg&lt;/span&gt;&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;white&lt;/span&gt; aperture is useful when flash-tags have been recorded in the video. The special thing about a white aperture is that all pixels in the aperture are summed and output as the 'signal' with no background subtraction. Such a signal can be employed by PyOTE to provide an alternative to the timestamp overlay from Video Time Inserters. In addition, a 'white' aperture always stays where placed --- it does not track and is never part of an aperture constellation group.&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;red&lt;/span&gt; aperture has the special property that it will only form a mask from a blob that is within 8 pixels of the center. This helps keep a nearby bright star from interfering with mask formation.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note: &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#0000ff;&quot;&gt;An aperture is never allowed to extend outside the image boundary. As a result, if an aperture is placed on a star that is close to the image edge and that star subsequently moves closer to the edge, tracking will be lost when the aperture bumps up against edge. In this case, use of a smaller aperture will allow tracking closer to the edge.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Help for image area (aperture placement, etc)</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="documentationPushButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking on this button will open a pdf file that provides additional documentation beyond that incorporated in the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;right-click-for-help&lt;/span&gt; system (which will/should be your first stop for assistance).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Documentation</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item row="1" column="1">
              <spacer name="verticalSpacer_8">
               <property name="orientation">
                <enum>Qt::Vertical</enum>
               </property>
               <property name="sizeHint" stdset="0">
                <size>
                 <width>20</width>
                 <height>40</height>
                </size>
               </property>
              </spacer>
             </item>
            </layout>
           </widget>
           <widget class="QWidget" name="tab_9">
            <attribute name="title">
             <string>Pref.</string>
            </attribute>
            <layout class="QGridLayout" name="gridLayout">
             <item row="0" column="0">
              <layout class="QVBoxLayout" name="verticalLayout_19">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_17">
                 <item>
                  <spacer name="horizontalSpacer_24">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QToolButton" name="appSizeToolButton">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; The aperture size selected here will only take effect when PyMovie is closed and then reopened. The selected value will be used to set the&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt; Select aperture size&lt;/span&gt; spinner on the main page when PyMovie starts up.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>aperture size to be
used at startup</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_25">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_10">
                 <item>
                  <spacer name="horizontalSpacer_22">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QFrame" name="frame_2">
                   <property name="frameShape">
                    <enum>QFrame::StyledPanel</enum>
                   </property>
                   <property name="frameShadow">
                    <enum>QFrame::Raised</enum>
                   </property>
                   <layout class="QHBoxLayout" name="horizontalLayout_30">
                    <item>
                     <layout class="QVBoxLayout" name="verticalLayout_18">
                      <item>
                       <widget class="QRadioButton" name="defAppSize51RadioButton">
                        <property name="layoutDirection">
                         <enum>Qt::LeftToRight</enum>
                        </property>
                        <property name="text">
                         <string>51</string>
                        </property>
                        <property name="checked">
                         <bool>true</bool>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="defAppSize41RadioButton">
                        <property name="text">
                         <string>41</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="defAppSize31RadioButton">
                        <property name="text">
                         <string>31</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="defAppSize21RadioButton">
                        <property name="text">
                         <string>21</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="defAppSize11RadioButton">
                        <property name="text">
                         <string>11</string>
                        </property>
                       </widget>
                      </item>
                     </layout>
                    </item>
                   </layout>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_23">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
             <item row="0" column="1">
              <layout class="QVBoxLayout" name="verticalLayout_21">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_25">
                 <item>
                  <spacer name="horizontalSpacer_28">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QToolButton" name="sigmaLevelToolButton">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;When a snap-to-blob aperture is initially placed on an image, a mask threshold will be calculated as either one, two, or three sigma. (Sigma is extracted by the Robust Mean extraction routine from the background noise and is the standard deviation of the background.)&lt;/p&gt;&lt;p&gt;This radio button group determines whether one, two, or three sigma will be used as the mask threshold when the next snap-to-blob aperture is placed.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Number of sigmas 
(std-dev) to set
mask threshold 
above background</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_29">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_21">
                 <item>
                  <widget class="QFrame" name="frame">
                   <property name="frameShape">
                    <enum>QFrame::StyledPanel</enum>
                   </property>
                   <property name="frameShadow">
                    <enum>QFrame::Raised</enum>
                   </property>
                   <layout class="QHBoxLayout" name="horizontalLayout_31">
                    <item>
                     <spacer name="horizontalSpacer_26">
                      <property name="orientation">
                       <enum>Qt::Horizontal</enum>
                      </property>
                      <property name="sizeHint" stdset="0">
                       <size>
                        <width>40</width>
                        <height>20</height>
                       </size>
                      </property>
                     </spacer>
                    </item>
                    <item>
                     <layout class="QVBoxLayout" name="verticalLayout_20">
                      <item>
                       <widget class="QRadioButton" name="oneSigmaRadioButton">
                        <property name="text">
                         <string>1 sigma</string>
                        </property>
                        <property name="checked">
                         <bool>false</bool>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="twoSigmaRadioButton">
                        <property name="text">
                         <string>2 sigma</string>
                        </property>
                        <property name="checked">
                         <bool>true</bool>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="threeSigmaRadioButton">
                        <property name="text">
                         <string>3 sigma</string>
                        </property>
                       </widget>
                      </item>
                     </layout>
                    </item>
                    <item>
                     <spacer name="horizontalSpacer_27">
                      <property name="orientation">
                       <enum>Qt::Horizontal</enum>
                      </property>
                      <property name="sizeHint" stdset="0">
                       <size>
                        <width>40</width>
                        <height>20</height>
                       </size>
                      </property>
                     </spacer>
                    </item>
                   </layout>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
             <item row="0" column="2">
              <layout class="QVBoxLayout" name="verticalLayout_24">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_29">
                 <item>
                  <spacer name="horizontalSpacer_32">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QToolButton" name="defaultMaskRadiusToolButton">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="text">
                    <string>Default mask radius.
This takes effect on next
aperture placement.</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_33">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_27">
                 <item>
                  <spacer name="horizontalSpacer_21">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QFrame" name="frame_3">
                   <property name="frameShape">
                    <enum>QFrame::StyledPanel</enum>
                   </property>
                   <property name="frameShadow">
                    <enum>QFrame::Raised</enum>
                   </property>
                   <layout class="QHBoxLayout" name="horizontalLayout_32">
                    <item>
                     <layout class="QVBoxLayout" name="verticalLayout_23">
                      <item>
                       <widget class="QRadioButton" name="radius20radioButton">
                        <property name="text">
                         <string>2.0</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius28radioButton">
                        <property name="text">
                         <string>2.8</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius32radioButton">
                        <property name="text">
                         <string>3.2</string>
                        </property>
                        <property name="checked">
                         <bool>true</bool>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius40radioButton">
                        <property name="text">
                         <string>4.0</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius45radioButton">
                        <property name="text">
                         <string>4.5</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius53radioButton">
                        <property name="text">
                         <string>5.3</string>
                        </property>
                       </widget>
                      </item>
                      <item>
                       <widget class="QRadioButton" name="radius68radioButton">
                        <property name="text">
                         <string>6.8</string>
                        </property>
                       </widget>
                      </item>
                     </layout>
                    </item>
                   </layout>
                  </widget>
                 </item>
                 <item>
                  <spacer name="horizontalSpacer_31">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
            </layout>
           </widget>
          </widget>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="layoutWidget">
        <layout class="QVBoxLayout" name="verticalLayout_16">
         <item>
          <widget class="ImageView" name="frameView">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
             <horstretch>2</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="toolTip">
            <string/>
           </property>
          </widget>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_24">
           <item>
            <widget class="QCheckBox" name="runPyote">
             <property name="enabled">
              <bool>false</bool>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If PyOTE is installed on your machine, this checkbox will be enabled, otherwise it will remain disabled.&lt;/p&gt;&lt;p&gt;If this box is checked, when a new csv file has been written, PyOTE will be automatically started and will read the newly created csv file.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>auto-run PyOTE</string>
             </property>
            </widget>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_13">
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_18">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_19">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item>
                  <widget class="QToolButton" name="transportMaxLeft">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>Jump to frame 0</string>
                   </property>
                   <property name="text">
                    <string>&lt;&lt;</string>
                   </property>
                   <property name="toolButtonStyle">
                    <enum>Qt::ToolButtonTextOnly</enum>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportBigLeft">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump left 10 seconds (if avi in use) or 200 frames (if FITS file in use).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>- 10 sec</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportSmallLeft">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump left 1 second (if avi in use) or 25 frames (if FITS file in use).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>- 1 sec</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportMinusOneFrame">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Move left 1 frame&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>-1 fr</string>
                   </property>
                   <property name="autoRepeat">
                    <bool>true</bool>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportPlayLeft">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Play the file continuously to the left (earlier in time). No data is recorded during 'play'. You must click &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;analyze&lt;/span&gt; in order to have data recorded.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>&lt;</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportPause">
                   <property name="minimumSize">
                    <size>
                     <width>0</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Pause an analysis (light curve extraction) that is in progress.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>pause</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportAnalyze">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Advance frame by frame from &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;cur frame&lt;/span&gt; up to (or down to) &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;stop frame&lt;/span&gt;, tracking and recording aperture data for plots and csv export. I.e., generate the light curve data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>analyze</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportPlayRight">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Play the file to the right (forward in time). No data is recorded during 'play'. You must click &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;analyze&lt;/span&gt; in order to have data recorded.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>&gt;</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportPlusOneFrame">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Move right 1 frame&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>+1 fr</string>
                   </property>
                   <property name="autoRepeat">
                    <bool>true</bool>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportSmallRight">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump right 1 second (if avi in use) or 25 frames (if FITS file in use).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>+ 1 sec</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportBigRight">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump right 10 seconds (if avi in use) or 200 frames (if FITS file in use).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>+ 10 sec</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportMaxRight">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump to last frame.&lt;/p&gt;&lt;p&gt;In addition, set &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;stop frame&lt;/span&gt; to the frame number of the last frame.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>&gt;&gt;</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
              </layout>
             </item>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_23">
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_20">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item>
                  <spacer name="horizontalSpacer_7">
                   <property name="orientation">
                    <enum>Qt::Horizontal</enum>
                   </property>
                   <property name="sizeHint" stdset="0">
                    <size>
                     <width>40</width>
                     <height>20</height>
                    </size>
                   </property>
                  </spacer>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportCsv">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button opens a Save File dialog. Use this dialog to name and, optionally select the directory where you wish the csv file to be written. The default directory is the directory from which the video data was read.&lt;/p&gt;&lt;p&gt;A set of columns is created for each aperture with the column naming incorporating the aperture name for identification.&lt;/p&gt;&lt;p&gt;Hopefully you named each aperture in a logical manner. While there is an automatic unique name given to each aperture at creation time, providing user-friendly aperture names will help greatly in identifying the csv file columns.&lt;/p&gt;&lt;p&gt;Apertures can be renamed at any time without losing any data, so please make use of this feature: it will make consumers of your csv file happy.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>write csv</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportPlot">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button triggers the production of a set of plots that provides a visual summary of the aperture data collected.  Note the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;cascade&lt;/span&gt; checkbox that controls whether these plots are done on top of each other (exactly aligned with each other) or spread like a deck of cards (cascased).&lt;/p&gt;&lt;p&gt;These plots make use of the name that you have assigned to each aperture (you did do that didn't you?). While there is an automatic unique name given to each aperture at creation time, providing user-friendly aperture names will help greatly in identifying the plots and is particularly useful in identifying csv file columns.&lt;/p&gt;&lt;p&gt;Apertures can be renamed at any time without losing any data, so please make use of this feature: it will make consumers of your lightcurves happy.&lt;/p&gt;&lt;p&gt;A composite plot is produced that contains the lightcurves for all of the apertures on a single plot.&lt;/p&gt;&lt;p&gt;Then a plot for each individual aperture is produced. This plot has two parts: a large 'signal intensity' suplot at the top and a smaller 'number of mask pixels' subplot at the bottom.&lt;/p&gt;&lt;p&gt;In the individual plots a symbol code is used to indicate when a default mask was used. Instead of a colored circle for signal intensity, a black triangle is used instead to indicate that the mask used in measuring this point's intensity was not computed from the image but was instead a 'default' of some kind.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>plot</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="transportCurrentFrameLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This box shows the frame number of the currently displayed frame.&lt;/p&gt;&lt;p&gt;This will be the first frame whose data will be recorded when an analysis is started.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="layoutDirection">
                    <enum>Qt::RightToLeft</enum>
                   </property>
                   <property name="text">
                    <string>   current frame</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QSpinBox" name="currentFrameSpinBox">
                   <property name="sizePolicy">
                    <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                     <horstretch>0</horstretch>
                     <verstretch>0</verstretch>
                    </sizepolicy>
                   </property>
                   <property name="minimumSize">
                    <size>
                     <width>73</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="layoutDirection">
                    <enum>Qt::RightToLeft</enum>
                   </property>
                   <property name="frame">
                    <bool>true</bool>
                   </property>
                   <property name="buttonSymbols">
                    <enum>QAbstractSpinBox::NoButtons</enum>
                   </property>
                   <property name="maximum">
                    <number>999999</number>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <layout class="QHBoxLayout" name="horizontalLayout_22">
                 <property name="spacing">
                  <number>0</number>
                 </property>
                 <item>
                  <widget class="QSpinBox" name="stopAtFrameSpinBox">
                   <property name="minimumSize">
                    <size>
                     <width>73</width>
                     <height>0</height>
                    </size>
                   </property>
                   <property name="layoutDirection">
                    <enum>Qt::RightToLeft</enum>
                   </property>
                   <property name="frame">
                    <bool>true</bool>
                   </property>
                   <property name="buttonSymbols">
                    <enum>QAbstractSpinBox::NoButtons</enum>
                   </property>
                   <property name="maximum">
                    <number>999999</number>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="transportStopAtFrameLabel">
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This box sets the final frame processed during an analysis run (light curve extraction).&lt;/p&gt;&lt;p&gt;If the&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt; stop frame&lt;/span&gt; number is greater than the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;cur frame&lt;/span&gt; number, analysis proceeds in that direction and the data will include that of the stop frame.&lt;/p&gt;&lt;p&gt;If the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;stop frame&lt;/span&gt; number is less than the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;cur frame&lt;/span&gt; number, analysis proceeds backwards (toward earlier time) and stops one frame before the given stop at frame. This is to facilate building a light curve by analyzing both forward and backward in time.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>stop frame</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QLabel" name="label">
                   <property name="text">
                    <string/>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportMark">
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;After a new video is loaded, when the first 'analysis' run is started, the number and positions of the apertures present at that time are automatically 'remembered' ('marked'). &lt;/p&gt;&lt;p&gt;This is very helpful if the starfield moves in a substantial way and yet you have a need to start over. A direct jump to the beginning would usually lose tracking and the apertures would need to be repositioned. But PyMovie 'remembers' the aperture and frame number setup so that with a click on the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Return to 'mark'&lt;/span&gt; button in the transport button array under the image, you can jump back and start over without the need to reset the aperture positions.&lt;/p&gt;&lt;p&gt;Because that 'remembering' is automatic, this will likely be a seldom used button.&lt;/p&gt;&lt;p&gt;But if there is a need to override the automatic 'mark', this button is the one to push.&lt;/p&gt;&lt;p&gt;Note that &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;ONLY&lt;/span&gt; the aperture count and positions are 'remembered', not the accumulated data or any other property change that you may have instituted during the run (like a threshold change or change in default mask, etc). Therefore, be sure to click on the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Clear aperture data&lt;/span&gt; button before resuming.&lt;/p&gt;&lt;p&gt;Note: a 'marked' position is &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOT&lt;/span&gt; remembered between runs. Use the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Save aperture group&lt;/span&gt; button if it is desired to have an aperture group/constellation be 'sticky'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>mark</string>
                   </property>
                  </widget>
                 </item>
                 <item>
                  <widget class="QToolButton" name="transportReturnToMark">
                   <property name="enabled">
                    <bool>false</bool>
                   </property>
                   <property name="font">
                    <font>
                     <pointsize>13</pointsize>
                     <weight>75</weight>
                     <bold>true</bold>
                    </font>
                   </property>
                   <property name="toolTip">
                    <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Return to the aperture constellation position present when either the first 'analysis' was started, or when the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;mark&lt;/span&gt; button was clicked (to override the normal automatic position recording).&lt;/p&gt;&lt;p&gt;The frame number is set as well.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                   </property>
                   <property name="text">
                    <string>Return to 'mark'</string>
                   </property>
                  </widget>
                 </item>
                </layout>
               </item>
               <item>
                <widget class="QToolButton" name="transportClearData">
                 <property name="font">
                  <font>
                   <pointsize>13</pointsize>
                   <weight>75</weight>
                   <bold>true</bold>
                  </font>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button deletes all data that has been accumulated in the apertures. (The apertures are 'objects' with properties like color, location, threshold, and also hold the recorded data itself).&lt;/p&gt;&lt;p&gt;It is often the case that one will 'experiment' with the video by analyzing short stretches of it.&lt;/p&gt;&lt;p&gt;All of the data produced while in the 'analyze' state is accumulated, even when you do it piecemeal. This can cause data points to be recorded multiple times.&lt;/p&gt;&lt;p&gt;Best practice is, before starting a production by setting the starting and stopping frame numbers, that one clears any previous data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>clear data</string>
                 </property>
                </widget>
               </item>
               <item>
                <spacer name="horizontalSpacer_11">
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>40</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
              </layout>
             </item>
            </layout>
           </item>
           <item>
            <spacer name="horizontalSpacer_12">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
      </widget>
      <widget class="QSplitter" name="splitterOne">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <widget class="QWidget" name="layoutWidget">
        <layout class="QVBoxLayout" name="verticalLayout_4">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_14">
           <item>
            <widget class="QTextEdit" name="textOut">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
               <horstretch>1</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="font">
              <font>
               <family>Courier New</family>
               <weight>75</weight>
               <bold>true</bold>
              </font>
             </property>
             <property name="toolTip">
              <string/>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <widget class="QLabel" name="textOutLabel">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Here is the 'decoder' for the column headings:&lt;/p&gt;&lt;p&gt;signal = sum of all pixels included in the mask with the background (bkavg) subtracted from each one.&lt;/p&gt;&lt;p&gt;appsum = sum of all pixels included in the mask &lt;/p&gt;&lt;p&gt;bkavg = average background, calculated using a Robust Mean estimator with 50% outlier rejection.&lt;/p&gt;&lt;p&gt;bkstd = standard deviation of the background, calculated using a Robust Scale estimator with 50% outlier rejection (assumes gaussian distribution)&lt;/p&gt;&lt;p&gt;mskth = Thresh used in forming mask. This value is added to bkavg to compute binary mask&lt;/p&gt;&lt;p&gt;mskpx = number of pixels in binary mask - if negative, a default mask was used&lt;/p&gt;&lt;p&gt;cvxhull = convex hull: the area enclosed by a rubber band that surrounds the mask.&lt;/p&gt;&lt;p&gt;xpos = y position of centroid in image coordinates&lt;/p&gt;&lt;p&gt;ypos = x position of centroid in image coordinates&lt;/p&gt;&lt;p&gt;minpx = minimum value pixel contained in the aperture&lt;/p&gt;&lt;p&gt;maxpx = maximum value pixel contained in the aperture&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Right-click here for info</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="layoutWidget">
        <layout class="QHBoxLayout" name="horizontalLayout_2">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_2">
           <item>
            <widget class="ImageView" name="thumbOneView"/>
           </item>
           <item>
            <widget class="QLabel" name="thumbnailOneLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:14pt;&quot;&gt;This panel shows a zoomed version of the image contained within the aperture boundaries.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Thumbnail One (right-click here for info)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignCenter</set>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QVBoxLayout" name="verticalLayout">
           <item>
            <widget class="ImageView" name="thumbTwoView"/>
           </item>
           <item>
            <widget class="QLabel" name="thumbnailTwoLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This image shows the mask that will be applied to the image shown in Thumbnail One.&lt;/p&gt;&lt;p&gt;Currently, the 'mask' is dynamically calculated by the following steps: &lt;/p&gt;&lt;p&gt;1) Thumbnail One is blurred using a 5x5 pixel Gaussian.&lt;/p&gt;&lt;p&gt;2)&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt; 'mask threshold above background&lt;/span&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;'&lt;/span&gt; is used to turn the blurred Thumbnail One image into a binary image (only the values 0 and 1 are present) by setting to 0 all pixels that are &amp;lt;= &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;'mask threshold above background&lt;/span&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;'&lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;/&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;+ bkavg&lt;/span&gt; and setting to 1 all pixels that are greater than &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;'mask threshold above background&lt;/span&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;'&lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;/&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;+ bkavg&lt;/span&gt;. &lt;/p&gt;&lt;p&gt;3) The resulting binary image is processed to find all 'blobs' (connected groups of pixels with value 1).&lt;/p&gt;&lt;p&gt;4) The signal contained in each blob is computed (with background subtraction).&lt;/p&gt;&lt;p&gt;5) If a tracking star is present and this is a target star (non-yellow aperture), an additional constraint is enforced: the centroid of the 'blob' must lie within a 8 pixel radius of the aperture center. This helps suppress any bright stars that may be in the aperture, but not in the center.&lt;/p&gt;&lt;p&gt;6) The 'blob' found in step 5 is turned into the mask that is displayed in this thumbnail.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Thumbnail Two (right-click here for info)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignCenter</set>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
  <action name="actionLike_special_settings">
   <property name="text">
    <string>Like special settings</string>
   </property>
  </action>
  <action name="actionOr_preferences">
   <property name="text">
    <string>Or preferences</string>
   </property>
  </action>
  <action name="actionOpen_AVI_SER_file">
   <property name="text">
    <string>Open AVI/SER file</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ImageView</class>
   <extends>QGraphicsView</extends>
   <header>pyqtgraph</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
